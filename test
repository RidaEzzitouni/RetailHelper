package ma.fst.tp1.test;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import ma.fst.tp1.bean.Commande;
import ma.fst.tp1.service.CommandeService;

public class CommandeServiceTest {

    public static List<Commande> commandes = new ArrayList<>();
    public static CommandeService commandeService = new CommandeService();

    public static void init() {
        Commande c1 = new Commande(1, "code1", 1000, 1000, 1000);
        Commande c2 = new Commande(2, "code2", 1000, 1000, 1000);
        Commande c3 = new Commande(3, "code3", 1000, 1200, 800);
        commandes.add(c1);
        commandes.add(c2);
        commandes.add(c3);

    }

    public static void chiffreAffaireTest() {

        double res = commandeService.chiffreAffaire(commandes);
        System.out.println(res);
    }

    public static void findByCodeTest() {
        String code = "code2";

        Commande res = commandeService.findBycode(code, commandes);
        System.out.println(res);
    }

    public static void findByIdTest() {
        long id = 2;
        Commande res = commandeService.findById(id, commandes);
        System.out.println(res);
    }

    public static void payerEspeceTest() {
        String code = "code2";
        double montant = 50;
        Commande myCommande = commandeService.findBycode(code, commandes);
        System.out.println("before myCommande = " + myCommande);
        int a = commandeService.payerEspece(code, montant, commandes);
        if (a == -1) {
            System.out.println("Commnde n'existe pas ");
        } else if (a == -2) {
            System.out.println("montant espece avec le montant avec montant donner est superieur au montant total");
        } else {
            System.out.println("montant a ete payer");
            System.out.println("after myCommande = " + myCommande);

        }
    }

    public static void findCommandesnonpayeTest() {

        List<Commande> res = commandeService.findCommandesnonpaye(commandes);
        System.out.println(res);

    }

    public static void findCommandespayeTest() {

        CommandeService cs = new CommandeService();
        Commande c1 = new Commande(1, "Code1", 20000, 56, 20000);
        Commande c2 = new Commande(2, "Code2", 40000, 5, 85);
        Commande c3 = new Commande(3, "Code3", 80000, 6, 98);
        List<Commande> commandes = Arrays.asList(c1, c2, c3);
        System.out.println(cs.findCommandespaye(commandes));

    }

    public static void encaisserTest() {
        String code = "code1";
        double montant = 100;
        Commande c = commandeService.findBycode(code, commandes);
        int a = commandeService.encaisser(code, montant, commandes);
        if (a == -1) {
            System.out.println("commande n'existe pas");
        } else if (a == -2) {
            System.out.println("montant inferieur au cheque");
        } else {
            System.out.println("nvMontant = " + c.getMontantPayerEspece());
            System.out.println("nvCheque = " + c.getMontantPayerCheque());
        }

    }

    public static void main(String[] args) {
        init();
//        chiffreAffaireTest();
//        findByCodeTest();
//        payerEspeceTest();
        //findCommandespayeTest();
//        findCommandesnonpayeTest();
        encaisserTest();
//        findByIdTest();

    }

}
